name: advanced-db-tech
services:

  app:
    depends_on:
      postgres:
        condition: service_healthy
    build: 
      context: ..
      dockerfile: docker/Dockerfile.app
    image: "adt:latest"
    container_name: "app"
    environment:
     - POSTGRES_USER=${POSTGRES_USER}
     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
     - POSTGRES_DB=${POSTGRES_DB}
    command: sh -c "
        ./docker/scripts/app/deploy.sh
      "
    volumes:
      - "..:/app"
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - 8080:8080

  postgres:
    build: 
      context: ..
      dockerfile: docker/Dockerfile.postgres
      args:
        PGDUMP_DOWNLOAD: ${PGDUMP_DOWNLOAD}
    image: "postgis:custom"
    container_name: postgres
    restart: always
    shm_size: 128mb
    environment:
     - PGUSER=${POSTGRES_USER}
     - PGDATA=/var/lib/postgresql/data
     - POSTGRES_USER=${POSTGRES_USER}
     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
     - POSTGRES_DB=${POSTGRES_DB}
     - POSTGRES_INITDB_ARGS="--encoding=LATIN1"
    volumes:
      - "./data/postgres:/var/lib/postgresql/data"
    ports:
     - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
