services:

  app:
    depends_on:
      neo4j:
        condition: service_healthy
      postgres:
        condition: service_healthy
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    image: "advanced-db-tech:latest"
    container_name: "app"
    command: >
      sh -c "
        ./cmd/build.sh && ./build/server
      "
    volumes:
      - "..:/app"
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - 8080:8080
    env_file: ../.env

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    shm_size: 128mb
    environment:
     - POSTGRES_USER=${POSTGRES_USER}
     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
     - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - "./data/postgres:/data"
    ports:
     - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5


  neo4j:
    image: neo4j:latest
    container_name: "neo4j"
    volumes:
      - "./data/neo4j:/data"
    hostname: "neo4j"
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH}
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
